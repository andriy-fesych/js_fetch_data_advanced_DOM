{"version":3,"sources":["scripts/main.js"],"names":["url","getPhoneIds","fetch","then","listOfPhones","json","phonesData","map","phone","id","getFirstReceivedDetails","idsList","arrayOfPromises","someId","somePhone","catch","error","alert","Promise","race","firstPhone","div","document","createElement","list","h3","innerText","className","body","append","li","name","getAllSuccessfulDetails","all","phonesArray","forEach","phoneObj","toUpperCase","getThreeFastestDetails","counter","i","style","display","prepend","getFastestDetails","filter","elem","ids"],"mappings":";AAAA,aAEA,IAAMA,EAAM,mEAEZ,SAASC,IACAC,OAAAA,MAAMF,EAAM,SAChBG,KAAK,SAAAC,GAAgBA,OAAAA,EAAaC,SAClCF,KAAK,SAAAG,GAAcA,OAAAA,EAAWC,IAAI,SAAAC,GAASA,OAAAA,EAAMC,OAGtD,SAASC,EAAwBC,GACzBC,IAAAA,EAAkBD,EAAQJ,IAAI,SAAAM,GAC3BX,OAAAA,MAAMF,EAAUa,IAAAA,OAAAA,EAAX,UACTV,KAAK,SAAAW,GAAaA,OAAAA,EAAUT,SAC5BU,MAAM,SAAAC,GAASC,OAAAA,MAAM,SAAUD,OAG7BE,OAAAA,QAAQC,KAAKP,GACjBT,KAAK,SAACiB,GACCC,IAAAA,EAAMC,SAASC,cAAc,OAC7BC,EAAOF,SAASC,cAAc,MAEpCC,EAAKf,GAAK,sBAEJgB,IAAAA,EAAKH,SAASC,cAAc,MAElCE,EAAGC,UAAY,iBACfL,EAAIM,UAAY,iBAChBL,SAASM,KAAKC,OAAOR,GACrBA,EAAIQ,OAAOJ,GACXJ,EAAIQ,OAAOL,GAELM,IAAAA,EAAKR,SAASC,cAAc,MAElCO,EAAGJ,UAAYN,EAAWW,KAC1BP,EAAKK,OAAOC,KAIlB,SAASE,EAAwBrB,GACzBC,IAAAA,EAAkBD,EAAQJ,IAAI,SAAAM,GAC3BX,OAAAA,MAAMF,EAAUa,IAAAA,OAAAA,EAAX,UACTV,KAAK,SAAAW,GAAaA,OAAAA,EAAUT,WAG1Ba,OAAAA,QAAQe,IAAIrB,GAChBT,KAAK,SAAC+B,GACCb,IAAAA,EAAMC,SAASC,cAAc,OAC7BC,EAAOF,SAASC,cAAc,MAC9BE,EAAKH,SAASC,cAAc,MAElCE,EAAGC,UAAY,iBACfL,EAAIM,UAAY,iBAChBL,SAASM,KAAKC,OAAOR,GACrBA,EAAIQ,OAAOJ,GACXJ,EAAIQ,OAAOL,GAEXU,EAAYC,QAAQ,SAAAC,GACZN,IAAAA,EAAKR,SAASC,cAAc,MAElCO,EAAGJ,UAAY,QAAUU,EAASL,KAAO,QAC/BK,EAAS3B,GAAG4B,cAAgB,QACtCb,EAAKK,OAAOC,OAapB,SAASQ,EAAuB3B,GAAS4B,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAGC,EAAI,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAClDnB,EAAMC,SAASC,cAAc,OAC7BE,EAAKH,SAASC,cAAc,MAC5BC,EAAOF,SAASC,cAAc,MAEpCF,EAAIoB,MAAMC,QAAU,QAEpBjB,EAAGC,UAAY,mBACfJ,SAASM,KAAKe,QAAQtB,GACtBA,EAAIQ,OAAOJ,GACXJ,EAAIQ,OAAOL,GAEXoB,EAAkBjC,EAAS4B,EAASC,EAAGhB,GAGzC,SAASoB,EAAkBjC,GAAS4B,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAGC,EAAI,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAGhB,EAAM,UAAA,OAAA,EAAA,UAAA,QAAA,EACxDe,GAAY,IAAZA,EAAAA,CAIE3B,IAAAA,EAAkBD,EAAQJ,IAAI,SAAAM,GAC3BX,OAAAA,MAAMF,EAAUa,IAAAA,OAAAA,EAAX,UACTV,KAAK,SAAAW,GAAaA,OAAAA,EAAUT,WAGjCa,QAAQC,KAAKP,GACVT,KAAK,SAACiB,GACCU,IAAAA,EAAKR,SAASC,cAAc,MAElCO,EAAGJ,UAAY,UAAUc,OAAAA,EAAmBpB,iBAAAA,EAAWW,KACvDP,EAAKK,OAAOC,GAKZc,EAHkBjC,EACfkC,OAAO,SAAAC,GAAQA,OAAAA,IAAS1B,EAAWX,KAET8B,EAAU,EAAGC,EAAI,EAAGhB,MA3CvDvB,IACGE,KAAK,SAAA4C,GAAOrC,OAAAA,EAAwBqC,KAEvC9C,IACGE,KAAK,SAAA4C,GAAOf,OAAAA,EAAwBe,KA2CvC9C,IACGE,KAAK,SAAA4C,GAAOT,OAAAA,EAAuBS","file":"main.dd2d7640.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst url = 'https://mate-academy.github.io/phone-catalogue-static/api/phones';\n\nfunction getPhoneIds() {\n  return fetch(url + '.json')\n    .then(listOfPhones => listOfPhones.json())\n    .then(phonesData => phonesData.map(phone => phone.id));\n}\n\nfunction getFirstReceivedDetails(idsList) {\n  const arrayOfPromises = idsList.map(someId => {\n    return fetch(url + `/${someId}.json`)\n      .then(somePhone => somePhone.json())\n      .catch(error => alert('Error:', error));\n  });\n\n  return Promise.race(arrayOfPromises)\n    .then((firstPhone) => {\n      const div = document.createElement('div');\n      const list = document.createElement('ul');\n\n      list.id = 'first-received-list';\n\n      const h3 = document.createElement('H3');\n\n      h3.innerText = 'First Received';\n      div.className = 'first-received';\n      document.body.append(div);\n      div.append(h3);\n      div.append(list);\n\n      const li = document.createElement('li');\n\n      li.innerText = firstPhone.name;\n      list.append(li);\n    });\n}\n\nfunction getAllSuccessfulDetails(idsList) {\n  const arrayOfPromises = idsList.map(someId => {\n    return fetch(url + `/${someId}.json`)\n      .then(somePhone => somePhone.json());\n  });\n\n  return Promise.all(arrayOfPromises)\n    .then((phonesArray) => {\n      const div = document.createElement('div');\n      const list = document.createElement('ul');\n      const h3 = document.createElement('H3');\n\n      h3.innerText = 'All Successful';\n      div.className = 'all-successful';\n      document.body.append(div);\n      div.append(h3);\n      div.append(list);\n\n      phonesArray.forEach(phoneObj => {\n        const li = document.createElement('li');\n\n        li.innerText = 'Name:' + phoneObj.name + '\\n'\n        + 'ID:' + phoneObj.id.toUpperCase() + '\\n' + '___';\n        list.append(li);\n      });\n    });\n}\n\ngetPhoneIds()\n  .then(ids => getFirstReceivedDetails(ids));\n\ngetPhoneIds()\n  .then(ids => getAllSuccessfulDetails(ids));\n\n// optional task below\n\nfunction getThreeFastestDetails(idsList, counter = 3, i = 1) {\n  const div = document.createElement('div');\n  const h3 = document.createElement('H3');\n  const list = document.createElement('ul');\n\n  div.style.display = 'block';\n\n  h3.innerText = 'Race of Promises';\n  document.body.prepend(div);\n  div.append(h3);\n  div.append(list);\n\n  getFastestDetails(idsList, counter, i, list);\n}\n\nfunction getFastestDetails(idsList, counter = 3, i = 1, list) {\n  if (counter === 0) {\n    return;\n  }\n\n  const arrayOfPromises = idsList.map(someId => {\n    return fetch(url + `/${someId}.json`)\n      .then(somePhone => somePhone.json());\n  });\n\n  Promise.race(arrayOfPromises)\n    .then((firstPhone) => {\n      const li = document.createElement('li');\n\n      li.innerText = `Number ${i} to resolve: ` + firstPhone.name;\n      list.append(li);\n\n      const idsListUp = idsList\n        .filter(elem => elem !== firstPhone.id);\n\n      getFastestDetails(idsListUp, counter - 1, i + 1, list);\n    });\n}\n\ngetPhoneIds()\n  .then(ids => getThreeFastestDetails(ids));\n"]}